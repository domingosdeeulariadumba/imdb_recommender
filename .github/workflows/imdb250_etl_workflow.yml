name: Run ETL Process

# Setting the trigger event (daily at 3:33 AM UTC and allowing manual execution)
on:
  schedule:
    - cron: '33 3 * * *'
  workflow_dispatch:

jobs:
  run_etl:
    # Specifying the OS for the runner (the latest version of Ubuntu)
    runs-on: ubuntu-latest 

    # Cloning the repository (main branch) into the runner
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3 

    # Setting up Python 3.9 on the runner
    - name: Set Up Python 3.9
      uses: actions/setup-python@v4 
      with:
        python-version: '3.9'

    # Caching Python dependencies to speed up future runs of the workflow
    - name: Cache Python Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('imdb250_etl/imdb250_etl_requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-
    
    # Installing dependencies for running the ETL process (or caching in case it exists)
    - name: Install Dependencies for ETL
      run: |
        cd imdb250_etl
        python -m pip install --upgrade pip
        pip install -r imdb250_etl_requirements.txt
        python -m nltk.downloader stopwords
  
  # Running the ETL process with five attempts in case it fails
    - name: Run ETL Process
      run: |
        set +e  # Disabling immediate error exit
        cd imdb250_etl
        for i in {0..4}; do
          python imdb250_etl_script.py
          if [ $? -eq 0 ]; then
            echo "ETL process executed successfully."
            break
          else
            echo "ETL process failed, retrying in 5 minutes..."
            sleep 300
          fi
        done
        set -e  # Re-enabling immediate error exit
    
    # Commiting and pushing changes to the repository
    - name: Commit and Push Changes
      run: |
        git add imdb250_deployment/
        git commit -m "Update IMDb 250 Data"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
