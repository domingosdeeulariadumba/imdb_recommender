name: Run ETL Pipeline for IMDb250 Data

# Setting the trigger event (daily at 3:33 AM UTC and allowing manual execution)
on:
  schedule:
    - cron: '33 3 * * *'
  workflow_dispatch:

jobs:
  run_etl:
    # Specifying the OS for the runner (the latest version of Ubuntu)
    runs-on: ubuntu-latest 

    # Cloning the repository (main branch) into the runner
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3 

    # Setting up Google Chrome on the runner (required for Selenium)
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    # Setting up Python 3.9 on the runner
    - name: Set Up Python 3.9
      uses: actions/setup-python@v4 
      with:
        python-version: '3.9'

    # Caching Python dependencies to speed up future runs of the workflow
    - name: Cache Python Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('etl/requirements.txt') }}
        restore-keys: ${{ runner.os }}-pip-
    
    # Installing dependencies for running the ETL process (or caching in case it exists)
    - name: Install Dependencies for ETL
      run: |
        cd etl
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -m nltk.downloader stopwords
  
  # Running the ETL process with five attempts in case it fails
    - name: Run ETL Process
      run: |
        cd etl
        set +e  # Disabling immediate error exit        
        for i in {0..4}; do
          python etl.py
          if [ $? -eq 0 ]; then
            echo "ETL process executed successfully!"
            break
          else
            echo "ETL process failed!!! Retrying in 5 minutes..."
            sleep 300
          fi
        done
        set -e  # Re-enabling immediate error exit
    
    # Commiting and pushing changes to the repository
    - name: Commit and Push Changes
      run: |
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "${{ github.actor }}@users.noreply.github.com"
        git add data/
        if ! git diff --cached --quiet; then
          git commit -m "Update IMDb 250 Data"
          git push "https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git" HEAD:${{ github.ref }}
        else
          echo "No changes to commit."
        fi